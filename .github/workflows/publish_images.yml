name: Build and push both images to the GitHub Container Registry
on:
  push:
    branches:
      - main # push to main gives "dev" tagged docker images
  
  # Triggered when a release is published
  # Docker image tagged as prod
  release:
      types: [published]
  
  # Triggered manually
  workflow_dispatch:
    inputs:
      docker_tag:
        description: 'Docker tag for the images, default is dev'
        required: false
        default: 'dev'
      
jobs:
  push-to-container-registry:
    if: github.repository == 'RMCrean/multi-docker-action'  
    name: Build and push both images to the GitHub Container Registry
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        include:
          - dockerfile: hugo.dockerfile
            image_name: swg-hugo-site
          - dockerfile: data.dockerfile
            image_name: swg-data-builder
        
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set Docker tag
        id: set-tag
        run: |
          if [ "${{ github.event_name }}" == "release" ]; then
            echo "tag=prod" >> $GITHUB_OUTPUT;
          elif [ "${{ github.ref }}" == "refs/heads/main" ]; then
            echo "value of input without input: ${{ github.event.inputs.docker_tag }}";
            echo "tag=${{ github.event.inputs.docker_tag }}" >> $GITHUB_OUTPUT;
          elif [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "tag=${{ github.event.inputs.docker_tag }}" >> $GITHUB_OUTPUT;
          fi

      - name: Set enviroment info for hugo build command
        id: set-hugo-env
        # 1) If the event is a release, set the HUGO_ENV_ARG to: release,vX.Y.Z
        # 2) If the event is a push to main, set the HUGO_ENV_ARG to: development,commit_sha
        # 3) Only other options is workflow_dispatch. 
        #    3.1) dispatch from branch with name beginning "release-", set to: release,vX.Y.Z
        #    3.2) dispatch from any other branch, set to : branch-name,commit_sha 
        run: |
          if [ "${{ github.event_name }}" == "release" ]; then
            echo "HUGO_ENV_ARG=release,${{ github.ref_name }}" >> $GITHUB_OUTPUT;
          elif [ "${{ github.ref }}" == "refs/heads/main" ]; then
            echo "HUGO_ENV_ARG=development,${{ github.sha }}" >> $GITHUB_OUTPUT;
          elif [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            branch_name="${{ github.ref_name }}"
            if [[ "$branch_name" == release-* ]]; then
              version_number=$(echo "$branch_name" | cut -d '-' -f2)
              echo "HUGO_ENV_ARG=release,${version_number}" >> $GITHUB_OUTPUT;
            else
              echo "HUGO_ENV_ARG=${branch_name},${{ github.sha }}" >> $GITHUB_OUTPUT;
            fi
          fi
        
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          push: ${{ github.event_name != 'pull_request' }}
          context: .
          file: ./dockerfiles/${{ matrix.dockerfile }}
          tags: ghcr.io/rmcrean/${{ matrix.image_name }}:${{ steps.set-tag.outputs.tag }}
          build-args: HUGO_ENV_ARG=${{ steps.set-hugo-env.outputs.HUGO_ENV_ARG }}

